# Mapanet table definition
# MS SQL version
#
# (C) 2022 Mapanet

# Drop old tables if needed

# DROP TABLE IF EXISTS Admin;
# DROP TABLE IF EXISTS Postal_Codes;
# DROP TABLE IF EXISTS Streets;
# DROP TABLE IF EXISTS Boundaries;


# Table REGIONS
 
CREATE TABLE Admin_Regions (<br />
  ISO VARCHAR(2) NOT NULL,<br />
  Country NVARCHAR(45) NOT NULL,<br />
  Language VARCHAR(2) NOT NULL,<br />
  Level INT NOT NULL,<br />
  Category NVARCHAR(45) NOT NULL,<br />
  CategoryEN NVARCHAR(45) NOT NULL,<br />
  Region1Code VARCHAR(10) NOT NULL,<br />
  Region2Code VARCHAR(10),<br />
  Region3Code VARCHAR(10),<br />
  Region4Code VARCHAR(10),<br />
  Region NVARCHAR(85) NOT NULL,<br />
  Latitude decimal(10, 6),<br />
  Longitude decimal(10, 6),<br />
  Elevation Int,<br />
  ISO2 VARCHAR(10),<br />
  FIPS VARCHAR(10),<br />
  NUTS VARCHAR(30),<br />
  HASC VARCHAR(12),<br />
  STAT VARCHAR(20),<br />
  CONSTRAINT PK_Admin_Regions PRIMARY KEY CLUSTERED <br />
  (<br />
  ISO ASC,<br />
  Language ASC,<br />
  Region1Code ASC,<br />
  Region2Code ASC,<br />
  Region3Code ASC,<br />
  Region4Code ASC<br />
  ) ON [PRIMARY]<br />
  );<br />

# Import

BULK INSERT Admin_Regions FROM 'Path\Geo-XX-4-XXX.DAT' WITH (FIRSTROW = 2, FIELDTERMINATOR = ';', DATAFILETYPE = 'widechar')

<br /><br />

# Table POSTAL CODES
 
CREATE TABLE Postal_Codes (<br>
  ISO varchar(2) NOT NULL,<br>
  Country nvarchar(45) NOT NULL,<br>
  Language varchar(2) NOT NULL,<br>
  ID bigint NOT NULL,<br>
  PostalCode varchar(10),<br>
  Region1 nvarchar(85),<br>
  Region2 nvarchar(85),<br>
  Region3 nvarchar(85),<br>
  Region4 nvarchar(85),<br>
  Locality nvarchar(110),<br>
  Suburb nvarchar(110),<br>
  Latitude decimal(10,6),<br>
  Longitude decimal(10,6),<br>
  Elevation Int,<br>
  TimeZone varchar(35),<br>
  UTC varchar(6),<br>
  DST varchar(6),<br>
  CONSTRAINT PK_Postal_Codes PRIMARY KEY CLUSTERED (ISO ASC, Language ASC, ID ASC) ON [PRIMARY]<br>
  );<br>

# Import

BULK INSERT Postal_Codes FROM 'Path\Geo-XX-5-XXX.DAT' WITH (FIRSTROW = 2,FIELDTERMINATOR = ';', DATAFILETYPE = 'widechar')

<br><br>

# Table STREETS
 
CREATE TABLE Streets (<br>
  ISO varchar(2) NOT NULL,<br>
  Country nvarchar(45) NOT NULL,<br>
  Language varchar(2) NOT NULL,<br>
  ID bigint NOT NULL,<br>
  PostalCode varchar(10),<br>
  Region1 nvarchar(85),<br>
  Region2 nvarchar(85),<br>
  Region3 nvarchar(85),<br>
  Region4 nvarchar(85),<br>
  Locality nvarchar(110),<br>
  Suburb nvarchar(110),<br>
  <!--StreetPrefix nvarchar(20),<br>-->
  <!--StreetPrep nvarchar(15),<br>-->
  Street nvarchar(110),<br>
  <!--StreetSuffix nvarchar(20),<br>-->
  <!--StreetDir nvarchar(15),<br>-->
  NumType varchar(10),<br>
  NumLow varchar(10),<br>
  NumHigh nvarchar(10),<br>
  OddEven varchar(1),<br>
  Enum varchar(30),<br>
  Building nvarchar(85),<br>
  IntType nvarchar(15),<br>
  IntLow varchar(10),<br>
  IntHigh varchar(10),<br>
  IntOddEven varchar(1),<br>
  Latitude decimal(10,6),<br>
  Longitude decimal(10,6),<br>
  Elevation Int,<br>
  TimeZone varchar(35),<br>
  UTC varchar(6),<br>
  DST varchar(6),<br>
  CONSTRAINT PK_Streets PRIMARY KEY CLUSTERED (ISO ASC, Language ASC, ID ASC) ON [PRIMARY]<br>
  );<br>

# Import

BULK INSERT Streets FROM 'Path\Geo-XX-8-XXX.DAT' WITH (FIRSTROW = 2, FIELDTERMINATOR = ';', DATAFILETYPE = 'widechar')<br>

<br><br>

# Table POLYGONS OF POSTAL CODES
 
CREATE TABLE Boundaries (<br />
						ISO varchar(2) NOT NULL,<br />
						Layer int NOT NULL,<br />
						Code varchar(12) NOT NULL,<br />
						Name nvarchar(85) NOT NULL,<br />
						Geometry geography NOT NULL,<br />
					CONSTRAINT PK_Boundaries PRIMARY KEY CLUSTERED (ISO ASC, Layer ASC, Code ASC) ON [PRIMARY]<br />
					);

# Import

BULK INSERT Boundaries FROM 'path\Geo-XX-7-XXX.DAT' WITH (DATAFILETYPE='widechar')

# Import with BCP Utility:

bcp [database].dbo.[Boundaries] in "path\Geo-XX-7-XXX.DAT" -T -c


Â© 2022 Mapanet.eu
